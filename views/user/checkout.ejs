<%- include("../../views/layout/user/header",{user:user}) %>
	<body>	

		<div id="page_item_area">
			<div class="container">
				<div class="row">
					<div class="col-sm-6 text-left">
						<h3>Checkout</h3>
					</div>        
					<div class="col-sm-6 text-right">
						<ul class="p_items">
							<li><a href="/">Home</a></li>
							<li><a href="/shop">Category</a></li>
							<li><span>Checkout</span></li>
						</ul>                    
					</div>    
				</div>
			</div>
		</div>
		
		<!-- Checkout Page -->
		<section class="checkout_page">
			<div class="container">
				<div class="row">
					<!-- Cart Items Section -->
					<div class="col-md-6">
						<div class="title">
							<h3>Review Your Cart</h3>
						</div>
						<div class="cart-items">
							<% cartItems.forEach(item => { %>
								<div class="cart-item">
									<img src="/uploads/product-images/<%= item.image %>" alt="<%= item.productName %>" style="width: 100px; height: 100px; object-fit: cover;" />

									<p><strong>Product:</strong> <%= item.productName %></p>
									<p><strong>Price:</strong> Rs<%= item.price %></p>
									<p><strong>Quantity:</strong> <%= item.quantity %></p>
									<p><strong>Total:</strong> Rs<%= item.price * item.quantity %></p>
								</div>
								<hr>
							<% }) %>
						</div>
					</div>
					
					<!-- Address Selection Section -->
					<div class="col-md-6">
						<div class="title">
							<h3>Select Shipping Address</h3>
						</div>
						<form action="/checkout/cod" method="POST">
							<div class="address-selection">
								<% addresses.forEach(address => { %>
									<div class="address-card">
										<input type="radio" 
										name="selectedAddress" 
										value="<%= address._id %>" 
										required 
										<% if (user.defaultAddress && user.defaultAddress.toString() === address._id.toString()) { %>
											checked
										<% } %>
								 >
										<p><strong>Name:</strong> <%= address.name %></p>
										<p><strong>Address:</strong> <%= address.address %>, <%= address.city %>, <%= address.state %>, <%= address.zip %></p>
										<p><strong>Phone:</strong> <%= address.mobile %></p>

										<button type="button" onclick="location.href='/checkouteditaddress/<%= address._id %>'" class="btn btn-secondary">
											Edit
										</button>
									</div>
									<hr>
								<% }) %>
							</div>
							
							
							<!-- Order Summary Section -->
							<div class="title">
								<h3>Your Order</h3>
							</div>
							<div>
								<table class="table">
									<tr>
										<th>Subtotal</th>
										<td>Rs <%= subTotal %></td>
									</tr>
									<tr>
										<th>Discount</th>
										<td>Rs <%= discount %></td>
									</tr>
									<tr>
										<th>Grand Total</th>
										<td>Rs <%= grandTotal %></td>
									</tr> 
								</table>
							</div>
							
							<!-- Payment Methods Section -->
							<div class="payment_method">           
								<ul>
									<li>
										<div class="custom-control custom-radio">
											<input type="radio" id="bankTransfer" name="paymentMethod" value="bank" class="custom-control-input" required>
											<label class="custom-control-label" for="bankTransfer">Direct Bank Transfer</label>
										</div>                        
									</li>
									<li>
										<div class="custom-control custom-radio">
											<input type="radio" id="razorpay" name="paymentMethod" value="razorpay" class="custom-control-input" required>
											<label class="custom-control-label" for="razorpay">Razorpay</label>
										</div>    
									</li>
									<li>
										<div class="custom-control custom-radio">
											<input type="radio" id="cashOnDelivery" name="paymentMethod" value="cash" class="custom-control-input" required>
											<label class="custom-control-label" for="cashOnDelivery">Cash on Delivery</label>
										</div>    
									</li>
									<li>
										<div class="custom-control custom-radio">
											<input type="radio" id="wallet" name="paymentMethod" value="wallet" class="custom-control-input" required>
											<label class="custom-control-label" for="wallet">Wallet</label>
										</div>    
									</li>
									
								</ul>     
							</div>


							<div class="add-address mb-2">
								<button type="button" onclick="location.href='/checkoutAddress'" class="btn btn-primary">
									Add New Address
								</button>
							</div>
							
							<!-- Place Order Button -->
							<div class="qc-button">
								<button id="proceedToPayment" type="submit" class="btn border-btn" onclick="placeOrder(event)">Place Order</button>
							</div>
							
						</form>
					</div>
				</div>
			</div>
		</section>
		

		<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

		<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>



		<script>

function placeOrder(event) {
    event.preventDefault(); 
    const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
    const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');

    // Check if an address is selected
    if (!selectedAddress) {
        Swal.fire({
            icon: 'error',
            title: 'Selection Error',
            text: 'Please select both a payment method and an address.'
        });
        return;
    }
    const paymentMethod=selectedPaymentMethod.value
    const address = selectedAddress.value;
    console.log(address);

    Swal.fire({
        title: 'Confirm Order',
        text: "Do you want to place the order?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, place it!',
        cancelButtonText: 'No, cancel!'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/checkout/cod', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    address: address,
					paymentMethod:paymentMethod
                }) // Closing brace for JSON.stringify
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Order Placed Successfully',
                        text: data.message,
                        confirmButtonText: 'View Order'
                    }).then(() => {
						if(data.cartEmpty){
						Swal.fire({
							icon:'info',
							title:'Your cart is empty',
							text:'successfully placed Order,your cart is empty ',
							confirmButtonText:'Go To Cart'

						}).then(()=>{
							window.location.href='/cart'
						})
					}else{
						window.location.href = `/order/success/${data.orderId}`;
					}
                      
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Order Failed',
                        text: data.error
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Order Error',
                    text: 'There was an error placing your order. Please try again.'
                });
            });
        }
    });
}


// async function handleRazorpayPayment(address, paymentMethod) {
//   try {
//     const response = await fetch('/order', {
//       method: 'GET',
//       headers: {
//         'Content-Type': 'application/json'
//       },
//       body: JSON.stringify({
//         address,
//         paymentMethod
//       })
//     });
//     const data = await response.json();
//     if (data.success) {
//       var options = {
//         'key': process.env.RAZORPAY_ID,
//         'amount': data.amount,
//         'currency': data.currency,
//         'order_id': data.order_id,
//         'name': 'fitplay essentials',
//         'description': 'Order Payment',
//         'image': '/your-logo-png',
//         'handler': function(response) {
//           // Handle payment success
//           handlePaymentSuccess(response.razorpay_payment_id, data.order_id);
//         }
//       };
//       var rzp1 = new Razorpay(options);
//       rzp1.open();
//     } else {
//       Swal.fire({
//         icon: 'error',
//         title: 'Order Failed',
//         text: data.error
//       });
//     }
//   } catch (error) {
//     console.error('Error:', error);
//     Swal.fire({
//       icon: 'error',
//       title: 'Order Error',
//       text: 'There was an error creating your order.'
//     });
//   }
// }

// async function handlePaymentSuccess(paymentId, orderId) {
//   try {
//     const response = await fetch('/checkout/paymentSuccess', {
//       method: 'POST',
//       headers: {
//         'Content-Type': 'application/json'
//       },
//       body: JSON.stringify({
//         paymentId,
//         orderId
//       })
//     });
//     const result = await response.json();
//     if (result.success) {
//       Swal.fire({
//         icon: 'success',
//         title: 'Payment Successful',
//         text: 'Your order has been placed.'
//       }).then(() => {
//         window.location.href = `/order/success/${orderId}`;
//       });
//     } else {
//       Swal.fire({
//         icon: 'error',
//         title: 'Payment Failed',
//         text: 'There was an error processing your payment.'
//       });
//     }
//   } catch (error) {
//     console.error('Error:', error);
//     Swal.fire({
//       icon: 'error',
//       title: 'Payment Error',
//       text: 'There was an error with your payment. Please try again.'
//     });
//   }
// }

// function placeOrder(event) {
//   event.preventDefault();
//   const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
//   const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');

//   // Check if an address is selected
//   if (!selectedAddress) {
//     Swal.fire({
//       icon: 'error',
//       title: 'Selection Error',
//       text: 'Please select both a payment method and an address.'
//     });
//     return;
//   }

//   const paymentMethod = selectedPaymentMethod.value;
//   const address = selectedAddress.value;

//   Swal.fire({
//     title: 'Confirm Order',
//     text: "Do you want to place the order?",
//     icon: 'warning',
//     showCancelButton: true,
//     confirmButtonText: 'Yes, place it!',
//     cancelButtonText: 'No, cancel!'
//   }).then((result) => {
//     if (result.isConfirmed) {
//       if (paymentMethod === 'razorpay') {
//         handleRazorpayPayment(address, paymentMethod);
//       } else {
//         handleCODPayment(address, paymentMethod);
//       }
//     }
//   });
// }
 </script>

		<%- include("../../views/layout/user/footer") %>



	