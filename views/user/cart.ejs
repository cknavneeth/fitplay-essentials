<!-- <!DOCTYPE HTML>
<html lang="en-US">
	

	</head> -->
<%- include("../../views/layout/user/header",{user:user}) %>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">

<style>
  /* Button Styles */
.my-custom-btn {
  font-family: 'Arial', sans-serif;
  font-weight: bold;
  border-radius: 5px;
  padding: 8px 16px;
  transition: background-color 0.3s ease;
}

.my-custom-btn:hover {
  background-color: #0056b3;
  color: #fff;
}

/* Modal Styles */
.modal-content {
  border-radius: 8px;
  font-family: 'Arial', sans-serif;
}

.modal-header {
  border-bottom: none;
}

.modal-title {
  font-size: 1.5rem;
  font-weight: 600;
}

/* Coupon List Styles */
#couponList {
  max-height: 300px;
  overflow-y: auto;
}

.coupon-item {
  border-bottom: 1px solid #ddd;
  padding: 12px 16px;
  transition: background-color 0.3s ease;
}

.coupon-item:hover {
  background-color: #f8f9fa;
}

/* Coupon Selection Button */
.coupon-item button {
  font-size: 0.875rem;
  padding: 6px 12px;
}

/*for quantity input field*/
.quantity-input {
  width: 70px; 
  text-align: center;
  padding: 5px;
  font-size: 14px; 
  border: 1px solid #ccc;
  border-radius: 4px;
}

@media (max-width: 768px) {
  .quantity-input {
    width: 40px; 
    font-size: 12px; 
  }
}

@media (max-width: 480px) {
  .quantity-input {
    width: 35px; 
    font-size: 10px; 
  }
}


</style>
<body>
  <!-- Page item Area -->
  <!-- Cart Page -->
  <div class="cart_page_area">
    <div class="container">
      <div class="row">
        <div class="col-12">
          <% if (cartEmpty) { %>
          <div class="empty-cart-message text-center">
            <h2>Your Cart is Empty</h2>
            <p>You have successfully placed your order. Your cart is now empty.</p>
            <a href="/shop" class="btn border-btn">Continue Shopping</a>
          </div>
          <% } else { %>
          <div class="cart_table_area table-responsive">
            <table class="table cart_prdct_table text-center">
              <thead>
                <tr>
                  <th class="cpt_no">No.</th>
                  <th class="cpt_img">Image</th>
                  <th class="cpt_pn">Product Name</th>
                  <th class="cpt_q">Quantity</th>
                  <th class="cpt_p">Price</th>
                  <th class="cpt_t">Total</th>
                  <th class="cpt_r">Remove</th>
                  <th class="cpt_sz">Size</th>
                </tr>
              </thead>
              <tbody>
                <% cart.items.forEach((item, index) => { %>
                <tr>
                  <td><span class="cp_no"><%= index + 1 %></span></td>
                  <td>
                    <a href="#" class="cp_img">
                      <img
                        src="/uploads/product-images/<%= item.productId.productImage[0] %>"
                        alt="<%= item.productId.productName %>"
                        class="img-fluid"
                      />
                    </a>
                  </td>
                  <td>
                    <a href="#" class="cp_title"
                      ><%= item.productId.productName %></a
                    >
                  </td>
                  <td>
                    <div class="cp_quntty d-flex align-items-center justify-content-center">
                      <button
                        class="decrement-btn btn btn-sm btn-outline-secondary"
                        onclick="updateQuantity('<%= item._id %>', 'decrement','<%= item.productId.sizes.find(size => size.size === item.size).stock %>')"
                      >
                        -
                      </button>
                      <input
                        name="quantity"
                        class="quantity-input text-center mx-2"
                        data-product-id="<%= item._id %>"
                        value="<%= item.quantity %>"
                        size="2"
                        type="number"
                        readonly
                      />
                      <button
                        class="increment-btn btn btn-sm btn-outline-secondary"
                        onclick="updateQuantity('<%= item._id %>', 'increment','<%= item.productId.sizes.find(size => size.size === item.size).stock %>')"
                      >
                        +
                      </button>
                    </div>
                  </td>
                  <td><p class="cp_price">Rs <%= Math.round(item.price) %></p></td>
                  <td><p class="cpp_total">Rs <%= item.totalPrice.toFixed(0) %></p></td>
                  <td>
                    <a
                      href="#"
                      onclick="removeFromCart('<%= item._id %>')"
                      class="btn btn-default cp_remove"
                    >
                      <i class="fa fa-trash"></i>
                    </a>
                  </td>
                  <td>
                    <p>Size: <%= item.size %></p>
                  </td>
                </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
          <% } %>
        </div>
      </div>

      <% if (!cartEmpty) { %>
      <!-- Only show this part if cart is not empty -->
      <div class="row">
        <div class="col-md-8 col-12 cart-actions cart-button-cuppon mb-4">
          <div class="row">
            <div class="col-md-7 col-12 mb-3 mb-md-0">
              <div class="cart-action d-flex flex-column flex-md-row">
                <a href="#" class="btn border-btn mb-2 mb-md-0 me-md-2">Continue Shopping</a>
                <a href="#" class="btn border-btn">Update Shopping Bag</a>
              </div>
            </div>

            <div class="col-md-5 col-12">
              <div class="cuppon-wrap">
                <h4>Discount Code</h4>
                <p>Enter your coupon code if you have</p>
                <form id="couponForm" class="cuppon-form d-flex flex-column flex-md-row">
                  <input
                    type="text"
                    id="couponCode"
                    placeholder="Enter coupon code"
                    class="form-control mb-2 mb-md-0 me-md-2"
                  />
                  <button
                    type="button"
                    class="btn border-btn mb-2 mb-md-0"
                    onclick="applyCoupon()"
                  >
                    Apply Coupon
                  </button>
                  <button
                    type="button"
                    class="btn border-btn"
                    id="removeCouponBtn"
                    onclick="removeCoupon()"
                  >
                    Remove Coupon
                  </button>
                </form>
              </div>
            </div>
          </div>
        </div>

        <div class="col-md-4 col-12 cart-checkout-process text-end">
          <div class="wrap">
            <p>
              <span>Subtotal</span><span id="subtotal">Rs <%= total.toFixed(0) %></span>
            </p>
            <p id="couponCodeDisplay">Coupon Code: <%= couponCode %></p>
            <p id="discount">Discount: Rs <%= discountAmount ? discountAmount.toFixed(0) : "0" %></p>
            <h4>
              <span>Grand Total</span><span id="grandTotal">Rs <%= grandTotal.toFixed(0) %></span>
            </h4>
            <a href="/checkout" class="btn border-btn">Proceed to Checkout</a>
          </div>
        </div>
      </div>
      <% } %>
    </div>
  </div>

  <div class="d-flex justify-content-center my-4">
    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#couponModal" onclick="fetchCoupons()">
      View Coupons
    </button>
  </div>

<!-- Modal Structure -->
<div class="modal fade" id="couponModal" tabindex="-1" aria-labelledby="couponModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header bg-primary text-white">
        <h5 class="modal-title" id="couponModalLabel">Available Coupons</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <ul id="couponList" class="list-group">
          <!-- Coupon items will be injected here -->
        </ul>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script>
    async function removeFromCart(itemId) {
      try {
        await fetch(`/cart/remove/${itemId}`, { method: "DELETE" });
        location.reload();
      } catch (error) {
        console.error(error);
      }
    }
  </script>



  

  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script>












async function updateQuantity(productId, action, maxStock) {
  const inputElement = document.querySelector(`input[name="quantity"][data-product-id="${productId}"]`);
  let currentQuantity = parseInt(inputElement.value);

  if (action === "increment") {
    if (currentQuantity >= maxStock) {
      Swal.fire({
        icon: "error",
        title: "Quantity Exceeded",
        text: `Only ${maxStock} items are available for this product.`,
        confirmButtonText: "OK",
      });
      return;
    }
    currentQuantity++;
  } else if (action === "decrement") {
    if (currentQuantity <= 1) {
      Swal.fire({
        icon: "error",
        title: "Invalid Quantity",
        text: "Quantity cannot be less than 1.",
        confirmButtonText: "OK",
      });
      return;
    }
    currentQuantity--;
  }

  inputElement.value = currentQuantity;

  
  try {
    const response = await axios.patch("http://localhost:3000/updateQuantity", {
      newQuantity: currentQuantity,
      productId,
    });

    const { cartTotal, grandTotal, couponCode, discountAmount } = response.data;

  
    document.getElementById("subtotal").textContent = `Rs ${cartTotal.toFixed(0)}`;
    document.getElementById("grandTotal").textContent = `Rs ${grandTotal.toFixed(0)}`;

    if (couponCode) {
      document.getElementById("couponCodeDisplay").textContent = `Coupon Code: ${couponCode}`;
      document.getElementById("discount").textContent = `Discount: Rs ${discountAmount.toFixed(0)}`;
    } else {
      document.getElementById("couponCodeDisplay").textContent = "Coupon Code: ";
      document.getElementById("discount").textContent = "Discount: ";
    }
  } catch (error) {
    Swal.fire({
      icon: "error",
      title: "Error",
      text: error?.response?.data?.error || "Something went wrong",
      confirmButtonText: "OK",
    });

    inputElement.value = action === "increment" ? currentQuantity - 1 : currentQuantity + 1;
  }
}






async function removeCoupon(){
  try {
    Swal.close();
    Swal.fire({
      title: 'Removing coupon...',
      allowOutsideClick: false,
      didOpen: () => {
        Swal.showLoading();
      }
    });
    const response=await axios.patch('http://localhost:3000/removeCoupon')

    console.log("Response data:", response.data);

    const {subTotal,grandTotal}=response.data

    document.getElementById("subtotal").textContent = `Rs ${subTotal.toFixed(0)}`;
        document.getElementById("grandTotal").textContent = `Rs ${grandTotal.toFixed(0)}`;
        document.getElementById("couponCodeDisplay").textContent = 'Coupon Code:';
        document.getElementById("discount").textContent = 'Discount:';

        Swal.fire({
      icon: 'success',
      title: 'Coupon removed successfully',
      confirmButtonText: 'OK'
    });
  } catch (error) {
    Swal.fire({
      icon:'error',
      title:'Error',
      text:error?.response?.data?.error || 'something went wrong',
      confirmButtonText:'OK'
    })
  }
}

  </script>








  <script>
    async function applyCoupon(){
      const couponCode=document.getElementById('couponCode').value.trim()

      if(!couponCode){
        Swal.fire({
          icon: 'warning',
          title: 'No Coupon Code',
          text: 'Please enter a coupon code before applying.',

        })
        return 
      }

      try {
        const response=await fetch('/applyCoupon',{
          method:'POST',
          headers:{
            'Content-Type':'application/json'
          },
          body:JSON.stringify({couponCode})
        })

        const result=await response.json()

        if(result.success){
          Swal.fire({
            icon: 'success',
            title: 'Coupon Applied!',
            text: 'Your coupon has been successfully applied!',
          })
          
          if (result.totalPrice !== undefined) {
                document.getElementById('subtotal').innerText = `Rs ${result.totalPrice.toFixed(2)}`;
            } 
          if (result.subtotal) {
                document.getElementById('subtotal').innerText = `Rs ${result.subtotal.toFixed(2)}`;
            }
            if (result.grandTotal) {
                document.getElementById('grandTotal').innerText = `Rs ${result.grandTotal.toFixed(2)}`;
            }



            if (result.discountAmount !== undefined) {
                const discountDisplay = document.getElementById('discount');
                if (discountDisplay) {
                    discountDisplay.innerText = `Discount: Rs ${result.discountAmount.toFixed(2)}`;
                }
            }

            // Display the coupon code in the cart (you can display it wherever you want)
            const couponCodeDisplay = document.getElementById('couponCodeDisplay');
            if (couponCodeDisplay) {
                couponCodeDisplay.innerText = `Coupon Code: ${result.couponCode}`;
            }

            
            if (result.items) {
                document.querySelectorAll('.cpp_total').forEach((el, index) => {
                    if (result.items[index]) {
                        el.innerText = `Rs ${result.items[index].totalPrice.toFixed(2)}`;
                    }
                });
            }

          
        }
        
        if (!result.success) {
    Swal.fire({
        icon: 'error',
        title: 'Coupon Failed',
        text: result.error || result.message || 'Failed to apply the coupon. Please try again.',
    });
}

        

      } catch (error) {
        console.error('Error applying coupon:', error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'An error occurred while applying the coupon. Please try again later.',
      });
      }
    }
  // </script>





<script>



  async function fetchCoupons() {
  try {
    const response = await fetch('/coupons');
    const coupons = await response.json();

    const couponList = document.getElementById('couponList');
    couponList.innerHTML = ""; 

    if (coupons.length > 0) {
      coupons.forEach(coupon => {
        const listItem = document.createElement('li');
        listItem.classList.add('list-group-item', 'bg-light', 'text-dark', 'd-flex', 'justify-content-between', 'align-items-center');

        
        listItem.innerHTML = `
          <span>
            <strong>${coupon.code}</strong> - ${coupon.discountType === 'percentage' 
              ? coupon.discountAmount + '%' 
              : '$' + coupon.discountAmount} off (Expires: ${new Date(coupon.expirationDate).toLocaleDateString()})
            ${coupon.maxDiscount ? `, Max Discount: RS${coupon.maxDiscount}` : ''}
            ${coupon.usageLimit ? `, Usage Limit: ${coupon.usageLimit}` : ''}
            ${coupon.perUserLimit ? `, Per User Limit: ${coupon.perUserLimit}` : ''}
          </span>
          <button class="btn btn-sm btn-outline-primary" onclick="copyToClipboard('${coupon.code}')">Copy</button>
        `;

        couponList.appendChild(listItem);
      });
    } else {
      const noCouponItem = document.createElement('li');
      noCouponItem.classList.add('list-group-item', 'text-center', 'bg-warning', 'text-dark');
      noCouponItem.textContent = 'No available coupons';
      couponList.appendChild(noCouponItem);
    }
  } catch (error) {
    console.error('Error fetching coupons:', error);
  }
}

function copyToClipboard(code) {
  navigator.clipboard.writeText(code).then(() => {
    Swal.fire({
      icon:'success',
      title: 'Coupon code copied!',
      text:'copied to clipboard'
    })
  }).catch(err => {
    console.error('Failed to copy:', err);
  });
}

</script>
</body>

<%- include("../../views/layout/user/footer") %>
