<%- include("../../views/layout/admin/header") %>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <style>
    .col-md-3 {
      padding: 20px;
      border: 1px solid #ddd;
      border-radius: 10px;
      margin: 10px;
    }

    .form-label {
      margin-bottom: 8px;
    }

    .form-control {
      width: 100%;
      padding: 8px;
      margin-bottom: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-sizing: border-box;
    }

    .d-grid {
      margin-top: 20px;
    }

    .btn-primary {
      background-color: #007bff;
      color: #fff;
      border: 1px solid #007bff;
      border-radius: 5px;
      padding: 10px 20px;
      cursor: pointer;
    }

    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }

    .pagination-container {
      text-align: center;
    }

    .pagination {
      display: inline-block;
    }

    .pagination a,
    .pagination .current-page {
      display: inline-block;
      padding: 5px 10px;
      margin: 0 2px;
      border: 1px solid #ddd;
      text-decoration: none;
      color: #333;
    }

    .pagination a:hover {
      background-color: #f5f5f5;
    }

    .error-message {
      color: red;
    }

    table {
  font-family: 'Roboto', sans-serif; /* Apply font style for table content */
  font-size: 14px; /* Table font size */
  color: #333; /* Change text color */
}
.form-label {
  font-family: 'Verdana', sans-serif; /* Font for labels */
  font-size: 14px; /* Label font size */
  font-weight: bold; /* Bold text for labels */
}
.form-control {
  font-family: 'Arial', sans-serif; /* Font for input fields */
  font-size: 14px; /* Input field font size */
}
.content-main {
  font-family: 'Arial', sans-serif; /* Example font, you can choose your preferred font */
  font-size: 16px; /* Adjust the font size */
  font-weight: normal; /* Adjust font weight, could be bold, normal, etc. */
  line-height: 1.6; /* Adjust line spacing for better readability */
}
  </style>
</head>
<body>
  <section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title card-title">Category</h2>
      </div>
    </div>
    <header class="card-header text-center mb-20">
      <form action="/category" method="get" class="d-inline">
        <div class="input-group input-group-sm border border-1 border-grey rounded-pill" style="width: 500px; margin-left: 230px">
          <input type="text" class="form-control border-0 rounded-pill mt-3" placeholder="Search categories" name="search"/>
          <button class="btn" type="submit">Search</button>
        </div>
      </form>
    </header>
    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-3">
            <form method="post" action="/addCategory" onsubmit="return handleFormSubmit(event)">
              <div class="mb-4">
                <label for="product_name" class="form-label ">Name</label>
                <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" required/>
                <div id="name-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId" required></textarea>
                <div id="description-error" class="error-message"></div>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">
                  Create category
                </button>
              </div>
            </form>
          </div>
          <div class="col-md-8 ml-10">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th class="text-center"></th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer Price</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th class="text-start">Edit</th>
                    <th>List/Unlist</th>
                  </tr>
                </thead>
                <tbody>
                    <%cat.reverse().forEach((category,index)=>{%>
                  <tr>
                    <td></td>
                    <td class="text-start"><%=category.name%></td>
                    <td class="text-start"><%=category.description%></td>
                    <td>
                    </td>

                    <% if (category.categoryOffer == 0) { %>
                      <td class="text-start">
                        <button class="btn btn-dark btn-info" style="width: 100px" onclick="addOffer('<%= category._id %>')">
                          Add Offer
                        </button>
                      </td>
                    <% } else { %>
                      <td class="text-start">
                        <button class="btn btn-danger btn-info" style="width: 100px" onclick="removeOffer('<%= category._id %>')">
                          Remove Offer
                        </button>
                      </td>
                    <% } %>
                    
                    
                    


                    <td class="text-start">
                      
                      <button class="btn btn-danger delete-category" data-id="<%= category._id %>" style="width: 70px; height: 30px; display: flex; align-items: center; justify-content: center; margin-bottom:10px;">
                        <span class="text-white" style="text-decoration: none;">Delete</span>
                      </button>
                      
                      
                      <button class="btn btn-success" style="width: 70px; height: 30px; display: flex; align-items: center; justify-content: center;">
                        <a href="/restoreCategory/<%= category._id %>/restore" class="text-white" style="text-decoration: none;">Restore</a>
                      </button>
                      
                      
                    </td>
                    <!-- <td class="text-start">
                      <button class="btn btn-danger" style="width: 70px">
                        <a href="#" class="text-white">Unlist</a>
                      </button>
                      <button class="btn btn-success" style="width: 70px">
                        <a href="" class="text-white">List</a>
                      </button>
                    </td> -->
                    <td class="text-start">
                      <a href="/editCategory?id=<%=category._id%>" class="btn btn-dark text-white">Edit</a>
                    </td>
                  </tr>
                  <%})%>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- <div class="pagination-container">
      <a href="#">&laquo; Previous</a>
      <span class="current-page"></span>
      <a href="#"></a>
      <a href="#">Next &raquo;</a>
    </div> -->
    <div class="pagination-container">
        <% if (currentPage > 1) { %>
          <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
        <% } else { %>
          <span class="disabled">&laquo; Previous</span>
        <% } %>
      
        <span class="current-page">Page <%= currentPage %> of <%= totalPages %></span>
      
        <% if (currentPage < totalPages) { %>
          <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
        <% } else { %>
          <span class="disabled">Next &raquo;</span>
        <% } %>
      </div>
  </section>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>


  <script>
   
    function handleFormSubmit(event) {
    event.preventDefault();

    if (!validateForm()) {
        return;
    }

    const name = document.getElementsByName('name')[0].value;
    const description = document.getElementById('descriptionId').value;

    fetch('/addCategory', {
        method: "POST",
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ name, description })
    })
    .then(response => response.json()) 
    .then(data => {
        if (data.error === "category already exists") {
            
            console.log(data)
            Swal.fire({
                icon: "error",
                title: "Oops",
                text: "Category already exists!"
            });
        } else if (data.error === "category added successfully") {
            
            Swal.fire({
                icon: "success",
                title: "Success",
                text: "Category added successfully!"
            }).then(() => {
               
                location.reload();
            });
        } else {
           
            Swal.fire({
                icon: "error",
                title: "Oops",
                text: "An error occurred!"
            });
        }
    })
    .catch(error => {
       
        Swal.fire({
            icon: "error",
            title: "Oops",
            text: "An error occurred while adding the category!"
        });
    });
}










    // function validateForm(){
    //     const name=document.getElementsByName("name")[0].value.trim()
    //     const description=document.getElementById("descriptionId").value.trim()
    //     isValid=true
    //     const namePattern = /^[A-Za-z\s]+$/;


    //     if(name===""){
    //         displayErrorMessage("name-error","name cant be empty")
    //         isValid=false
    //     }else if(!namePattern.test(name)){
    //         displayErrorMessage("name-error","category name should contain alphabetic characters")
    //     }

    //     if(description===""){
    //         displayErrorMessage("description-error","descripton cant be empty!")
    //         isValid=false
    //     }
    //     return isValid
    // }
    function validateForm() {
    const name = document.getElementsByName("name")[0].value.trim();
    const description = document.getElementById("descriptionId").value.trim();
    let isValid = true;
    const namePattern = /^[A-Za-z\s]+$/; // Allows only letters and spaces

    // Clear any previous error messages
    clearErrorMessage("name-error");
    clearErrorMessage("description-error");

    if (name === "") {
        displayErrorMessage("name-error", "Name can't be empty");
        isValid = false;
    } else if (!namePattern.test(name)) {
        displayErrorMessage("name-error", "Category name should contain only alphabetic characters and spaces");
        isValid = false;
    }

    if (description === "") {
        displayErrorMessage("description-error", "Description can't be empty!");
        isValid = false;
    } else if (!namePattern.test(description)) {
        displayErrorMessage("description-error", "Description should contain only alphabetic characters and spaces");
        isValid = false;
    }

    return isValid;
}



    function displayErrorMessage(elementId,error){
        var errorElement=document.getElementById(elementId)
        errorElement.innerText=error
        errorElement.style.display="block"

    }
    function clearErrorMessage() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach((element) => {
        element.innerText = "";
        element.style.display = "none";
    });
}



  </script>
  <script>
    // $(document).ready(function(){
    //   $('.delete-category').on('click',function(){
    //     const categoryId=$(this).data('id')


    //     if(confirm("are you want to this user?" )){
    //       $.ajax({
    //          url:'/deleteCategory/' +categoryId,
    //          method:"POST",
    //          success:function(response){
    //           if(response.success){
    //             console.log(response.success)
    //             $('#category-'+categoryId).remove()
    //             alert("successfully deleted")
    //             window.location.href = "/category";

    //           }else{
    //             alert('error :'+response.error)
    //           }
    //          },
    //          error:function(err){
    //             alert("an error occured while deleting category")
    //          }
    //       })
    //     }
    //   })
    // })



    $(document).ready(function(){
      $('.delete-category').on('click',function(){
        const categoryId=$(this).data('id')


        Swal.fire({
            title: 'Are you sure?',
            text: "Do you want to delete this category?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result)=>{
          if(result.isConfirmed){
          $.ajax({
             url:'/deleteCategory/' +categoryId,
             method:"POST",
             success:function(response){
              if(response.success){
                console.log(response.success)
                $('#category-'+categoryId).remove()
                
                
                Swal.fire({
                  icon:'success',
                  title:'Category deleted successfully',
                  text:'Category has been deleted successfully'
                }).then(()=>{
                  window.location.href = "/category";
                })
                

              }else{
                alert('error :'+response.error)
              }
             },
             error:function(err){
                alert("an error occured while deleting category")
             }
          })
        }
        })

       
      })
    })
  </script>

  <script>
   async function addOffer(categoryId) {
 
  const { value: amount } = await Swal.fire({
    title: 'Offer in percentage',
    input: 'number',
    inputLabel: 'Percentage',
    inputPlaceholder: '%',
    inputAttributes: {
      min: 0,
      max: 100,
      step: 1
    },
    showCancelButton: true,
    confirmButtonText: 'Add Offer',
    cancelButtonText: 'Cancel'
  });


  if (amount) {
   
    $.ajax({
      method: 'POST',
      url: '/addCategoryOffer',
      data: {
        percentage: amount,
        categoryId: categoryId
      },
      success: (response) => {
        if (response.status === true) {
          Swal.fire({
            title: 'Offer Added Successfully',
            text: `Offer of ${amount}% has been applied to the category and its products.`,
            icon: 'success',
            confirmButtonText: 'OK'
          }).then(() => {
            location.reload(); 
          });
        } else {
          Swal.fire('Failed', 'Failed to add offer', 'error');
        }
      },
      error: (err) => {
        Swal.fire('Error', 'An error occurred while adding the offer', 'error');
      }
    });
  }
}


async function removeOffer(categoryId) {
  Swal.fire({
    icon: 'warning',
    title: 'Are you sure?',
    text: 'Remove the offer now?',
    showCancelButton: true, 
    confirmButtonText: 'OK',
    cancelButtonText: 'Cancel'
  }).then((result) => {
    if (result.isConfirmed) {
      
      $.ajax({
        method: 'POST',
        url: '/removeCategoryOffer',
        data: {
          categoryId: categoryId
        },
        success: (response) => {
          if (response.success) {
            Swal.fire({
              title: 'Offer Removed Successfully',
              text: 'The offer has been removed from this category.',
              icon: 'success'
            }).then(() => {
              location.reload(); 
            });
          } else {
            Swal.fire('Error', response.error, 'error');
          }
        },
        error: (xhr, status, error) => {
          console.error('AJAX error:', error);
          Swal.fire('Error', 'Failed to remove offer.', 'error');
        }
      });
    } else if (result.dismiss === Swal.DismissReason.cancel) {
      
      Swal.fire('Cancelled', 'Offer removal cancelled.', 'info');
    }
  });
}




  </script>

<%- include("../../views/layout/admin/footer") %>
