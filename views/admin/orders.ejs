
<%- include('../../views/layout/admin/header') %>

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
<style>
     table {
            border-radius: 10px;
            overflow: hidden;
            background-color: #f9f9f9;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        thead {
            background: linear-gradient(45deg, #007bff, #6610f2);
            color: white;
        }

        th, td {
            text-align: center;
            vertical-align: middle;
        }

        tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        /* Pagination Styling */
        .pagination .page-link {
            color: #007bff;
            transition: 0.3s ease-in-out;
        }

        .pagination .page-link:hover {
            background-color: #007bff;
            color: white;
        }

        .pagination .active .page-link {
            background-color: #6610f2;
            border-color: #6610f2;
            color: white;
        }

        /* Buttons Styling */
        .btn {
            font-size: 14px;
            padding: 5px 10px;
            border-radius: 20px;
            transition: 0.3s;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }

        .btn-warning {
            background-color: #ffc107;
            border-color: #ffc107;
        }

        .btn-warning:hover {
            background-color: #e0a800;
            border-color: #e0a800;
        }

        .btn-secondary {
            background-color: #6c757d;
            border-color: #6c757d;
        }

        .btn-secondary:hover {
            background-color: #565e64;
            border-color: #565e64;
        }

        /* Animations */
        tbody tr {
            animation: fadeInUp 0.5s;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
          /* Table container for alignment */
    .table-container {
        margin: 20px;
        padding: 20px;
        background: #f9f9f9;
        border-radius: 8px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    /* Table style */
    .table {
        width: 100%;
        border-collapse: collapse;
        font-family: Arial, sans-serif;
        text-align: left;
        overflow: hidden;
    }

    /* Table header */
    .table th {
        background-color: #004080;
        color: #fff;
        padding: 12px 10px;
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 0.03em;
    }

    /* Table rows */
    .table td {
        padding: 10px 8px;
        font-size: 14px;
        color: #333;
    }

    /* Alternating row colors */
    .table tbody tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    /* Hover effect */
    .table tbody tr:hover {
        background-color: #e0e7ff;
        transition: background-color 0.3s;
    }

    /* Status dropdown */
    .status-dropdown {
        padding: 5px 10px;
        font-size: 13px;
        border-radius: 4px;
        border: 1px solid #ccc;
    }

    /* Pagination styles */
    .pagination {
        margin: 15px 0;
        padding: 0;
    }

    .pagination .page-item {
        display: inline;
    }

    .pagination .page-link {
        color: #004080;
        font-size: 14px;
        padding: 8px 12px;
        text-decoration: none;
        border: 1px solid #ddd;
        margin: 0 4px;
        border-radius: 4px;
    }

    .pagination .page-link:hover {
        background-color: #004080;
        color: #fff;
        transition: all 0.3s;
    }

    .pagination .active .page-link {
        background-color: #004080;
        color: #fff;
        border: none;
    }
</style>


<h2>Admin Orders</h2>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Order ID</th>
            <th>User</th>
            <th>Items</th>
            <th>Total Amount</th>
            <th>Order Date</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        <% orders.forEach(order => { %>
            <tr>
                <td><%= order.oid %></td>
                <td><%= order.user ? order.user.username : 'Guest' %></td>
                <td>
                    <ul>
                        <% order.items.forEach(item => { %>
                            <li><%= item.productName %> (x<%= item.quantity %>) - Rs<%= item.totalPrice %></li>
                        <% }) %>
                    </ul>
                </td>
                <td>Rs<%= order.totalAmount %></td>
                <td><%= order.orderDate.toDateString() %></td>
                <td><%= order.orderStatus %></td>

                <td>
                    <select class="status-dropdown" data-order-id="<%= order._id %>" 
                        <%= (order.orderStatus === 'Cancelled' || order.orderStatus === 'Returned'||order.orderStatus==='Delivered') ? 'disabled' : '' %>>
                            
                        <option value="Processing" <%= order.orderStatus === 'Processing' ? 'selected' : '' %>>Processing</option>
                        <option value="Shipped" <%= order.orderStatus === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                        <option value="Delivered" <%= order.orderStatus === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                        <option value="Cancelled" <%= order.orderStatus === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                        <option value="Returned" <%= order.orderStatus === 'Returned' ? 'selected' : '' %>>Returned</option>
                    </select>
                </td>


                <td>
                    <% if (order.orderStatus === 'Processing' || order.orderStatus === 'Pending') { %>
                        <button type="button" class="btn btn-primary cancel-btn" data-order-id="<%= order._id %>">Cancel</button>
                    <% } else if (order.orderStatus === 'Cancelled') { %>
                        <button type="button" class="btn btn-secondary" disabled>Cancelled</button>
                    <% } else if (order.orderStatus === 'Delivered' && order.returnRequest) { %>
                        <button type="button" class="btn btn-warning return-request-btn" data-order-id="<%= order._id %>">Return Request</button>
                    <% } else if (order.orderStatus === 'Delivered') { %>
                        <button type="button" class="btn btn-primary return-btn" data-order-id="<%= order._id %>">Delivered</button>
                    <% } else if (order.orderStatus === 'Returned') { %>
                        <button type="button" class="btn btn-secondary" disabled>Returned</button>
                    <% } %>
                </td>
                
            </tr>
        <% }) %>
    </tbody>
</table>


<nav aria-label="Order Pagination">
    <ul class="pagination justify-content-center">
        <% if (currentPage > 1) { %>
            <li class="page-item">
                <a class="page-link" href="?page=<%= currentPage - 1 %>&limit=<%= limit %>" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        <% } %>

        <% for (let i = 1; i <= totalPages; i++) { %>
            <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                <a class="page-link" href="?page=<%= i %>&limit=<%= limit %>"><%= i %></a>
            </li>
        <% } %>

        <% if (currentPage < totalPages) { %>
            <li class="page-item">
                <a class="page-link" href="?page=<%= currentPage + 1 %>&limit=<%= limit %>" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        <% } %>
    </ul>
</nav>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener('DOMContentLoaded',function(){
        document.querySelectorAll('.cancel-btn').forEach(button=>{
            button.addEventListener('click',function(){
                
                const orderId=this.getAttribute('data-order-id')
                const cancelButton=this


                Swal.fire({
                    title: 'Are you sure?',
                    text: "Do you want to cancel this order?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, cancel it!'
                }).then((result)=>{
                    if(result.isConfirmed){
                        fetch(`/adcancel-order/${orderId}`,{
                            method:'POST',
                            headers:{
                                'Content-Type':'application/json'
                            }
                        }).then((response)=>response.json())
                        .then(data=>{
                            if(data.success){
                                cancelButton.classList.remove('btn-primary');
                                    cancelButton.classList.add('btn-secondary');
                                    cancelButton.textContent = 'Cancelled';
                                    cancelButton.disabled = true;
                                    Swal.fire('Cancelled!', 'Your order has been cancelled.', 'success');
                            }
                        })
                        .catch((error)=>{
                            console.error('error ayitund,onn sredhik',error)
                        })
                    }
                })
            })
        })
    })
</script>

<script>
    document.addEventListener('DOMContentLoaded',function(){
        document.querySelectorAll('.status-dropdown').forEach(dropdown=>{
            dropdown.addEventListener('change',function(){
                if (this.disabled) return;
                const orderId=this.getAttribute('data-order-id')
                const newStatus=this.value

                Swal.fire({
                    title: 'Are you sure?',
                    text: "Do you want to change status?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, change it!'
                })
                .then((result)=>{
                    if(result.isConfirmed){
                        fetch(`/updateOrderStatus/${orderId}`,{
                            method:'POST',
                            headers:{
                                'Content-Type':'application/json'
                            },
                            body:JSON.stringify({status:newStatus})
                        })
                        .then(response=>response.json())
                       
                        .then(data=>{
                            
                            if(data.success){
                                Swal.fire('updated','Order status has been updated','success')
                            }else{
                                Swal.fire('Failed','Order status updating failed','failed')
                            }
                        })
                        .catch((error)=>{
                            console.error('error occured',error)
                            Swal.fire('Error','error happened while updating order status','error')
                        })
                    }
                })
            })
        })
    })
</script>




<script>
    document.addEventListener('DOMContentLoaded',()=>{
        document.querySelectorAll('.return-request-btn').forEach(button=>{
            button.addEventListener('click',async function(){
                const orderId = this.dataset.orderId;
                const result=await Swal.fire({
                    
                    title: 'Return Request',
                    text: 'Do you want to accept or reject this return request?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Accept',
                    cancelButtonText: 'Reject'
                })

                if(result.isConfirmed){
                    handleReturnRequest(orderId,'accept')
                }else if(result.dismiss === Swal.DismissReason.cancel){
                    handleReturnRequest(orderId,'reject')
                }
            })
        })
    })




    function handleReturnRequest(orderId,action){
        fetch(`/returnRequest/${orderId}`,{
            method:'post',
            headers:{
                'Content-Type':'application/json'
            },
            body:JSON.stringify({action})
        })
        .then(response=>response.json())
        .then(data=>{
            if(data.success){
                // Swal.fire('success','return request has been handled successfully','success')
                if (action === 'accept') {
                Swal.fire({
                    icon: 'success',
                    title: 'Return Accepted',
                    text: 'You have accepted the return request for order #' + orderId,
                    confirmButtonText: 'OK'
                });
            } else if (action === 'reject') {
                Swal.fire({
                    icon: 'info',
                    title: 'Return Rejected',
                    text: 'You have rejected the return request for order #' + orderId,
                    confirmButtonText: 'OK'
                });
            }
            }else{
                 Swal.fire('error',data.error,'error occured ayitund')
            }
        })
        .catch((err)=>{
            console.error(err)
            Swal.fire('Error', 'Something went wrong', 'error');

        })
    }
</script>


<%- include('../../views/layout/admin/footer') %>